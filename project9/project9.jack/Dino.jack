class Dino {
    field int x;
    field int y;
    field boolean catchStatus;

    constructor Dino new(int Ax , int Ay) {
        /* the x, y will be the place on the map */
        let x = Ax;
        let y = Ay;
        let catchStatus=false;
        do draw_Dino(x, y);
        return this;
    }
    method int get_x() {
    return x;
    }
    method int get_y() {
    return y;
    }
    method boolean get_CatchStatus()
    {
        return catchStatus;
    }
    method void set_CatchStatus()
    {
        let catchStatus=true;
        return;
    }


	method void move_up_Dino() {
        do delete_Dino(x, y); 
        let y = y - 2;  
        do draw_Dino(x, y);
        do Sys.wait(10);
        return;
	}

	method void move_down_Dino() {
    var Game game;

    if (y < 220) 
    { 
        do delete_Dino(x, y); 
        let y = y + 2;  
        do draw_Dino(x, y);
        do Sys.wait(10);
    }
    else
    {
    do delete_Dino(x, y);
    let game=Game.new(0,235);
    let y=y+2;
    do game.move_up_Ten();
    }
    return;
    
	}

	method void move_left_Dino() {
        do delete_Dino(x, y); 
        let x = x - 1;  
        do draw_Dino(x, y); 
        do Sys.wait(30);
        return;
	}


	method void delete_Dino(int x, int y) 
	{
    var int memAddress;
    let memAddress = 16384 + (y * 32) + x; // Calculate memory address using x and y coordinates
    
    // Clear the Dino at the specified coordinates (set to 0)
    do Memory.poke(memAddress, 0);
    do Memory.poke(memAddress + 32, 0);
    do Memory.poke(memAddress + 64, 0);
    do Memory.poke(memAddress + 96, 0);
    do Memory.poke(memAddress + 128, 0);
    do Memory.poke(memAddress + 160, 0);
    do Memory.poke(memAddress + 192, 0);
    do Memory.poke(memAddress + 224, 0);
    do Memory.poke(memAddress + 256, 0);
    do Memory.poke(memAddress + 288, 0);
    do Memory.poke(memAddress + 320, 0);

    return;
	}

	method void draw_Dino(int x, int y) {
    var int memAddress; 
    let memAddress = 16384 + (y * 32) + x; // Calculate memory address using x and y coordinates
    
    // column 0
    do Memory.poke(memAddress, 60);
    do Memory.poke(memAddress + 32, 55);
    do Memory.poke(memAddress + 64, 63);
    do Memory.poke(memAddress + 96, 127);
    do Memory.poke(memAddress + 128, 504);
    do Memory.poke(memAddress + 160, 2044);
    do Memory.poke(memAddress + 192, 4084);
    do Memory.poke(memAddress + 224, 16352);
    do Memory.poke(memAddress + 256, -64);
    do Memory.poke(memAddress + 288, 576);
    do Memory.poke(memAddress + 320, 864);

    return;
	}
}
